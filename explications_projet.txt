explication projet "mac_gyver_maze"

il faut créer le labyrinthe sous forme de fichier. Je créer unn fichier excel qui me permet de visualiser le labyrinthe que je veux créer. 

Chaque mur sera symbolisé par le lettre x et chaque espace vide sera symbolisé par la lettre o

Le fichier du plan est un fichier python et le plan en soit est une liste 225 signes.

Le plateau de jeu est défini par 15 cases horizontales commées de A à O et 15 case verticales numérotées e 0 à 15 ce qui permet d'identifier chaque case avec un couple de type C8 par exemple.

Il faut installer pygame mais il faut que ce soit une version Python 3 mais en 32 bits. Je dois donc désinstaller Python 3 en version 64 bits



------------------

# Pseudo code

# ask player to select a level
# create maze based on level
# display maze

#create a loop until game is finished
    # ask player to move mcgyver character (do not allow to move outside maze or on a wall)
    # reload maze with new mcgyver position

    #create condition inside loop
    # if mac gyver move on an item , he fills his bag
    # if mac Gyver faces guardian without all items he looses (game is finished)
    # else he wins (game is finished)


# objects

# Level (attributes file | method create, method display) -> hint : diplay method should be called after each move
# character (attributes name, position, symbol, movable, bag | method move ? )


-------------------

Après discussion aveec mon mentor, il est preferable de créer le jeu en mdoe console pour avoir la logique et ensuite interger Pygame.

Je réalise donc une structure autour du pseudo code afin d'utilsier la POO

j'ai pu réaliser la structure en affichage console en faisant un print d'un fichier texte qui contentait des X pour symboliser les mur. 

J'ai pu faire le déplacement de mac gyver avec des tuples demandées au travers d'un input dans la console. J'ai pu ensuite empecher le déplacement sur les mur et ensuite ajouter la logique du jeu qui veut que Mac gyver ne gagne que s'il se présente devant le guardien avec les 3 items. 

Dans mes classes, le déplacement se faisait dans la classe du labyrinthe. Je l'ai retravaillé ensuite pour qu'elle soit dans la méthode de déplacement des personnages. 

Mon mentor m'a aussi conseillé d'encapsuler le niveau du labyrinthe avant de passer à la realisation du jeu avec Pygame. J'ai donc fait cette encapsulation. 

 Je suis donc passé sur Pygame et pour le moment, je repars sur des nouvelles classes similaires au précédentes afin de reproduire les logiques dans les classes. 

 J'ai modifié le constructeur du labyrinthe afin d'avoir aussi un tuple correspondant aux indexes de lignes et d'emplacement. Cela m'a permis d'afficher les murs du jeu en multipliant chaque valeur des tuples par 45 (pixels)

J'ai pu ensuite passer à l'affichage et au déplacement de Mac gyver. j'ai créé une méthode de vérification des déplacements afin de pouvoir "mapper" les résultat de l'évènement de la touche tapé sur les déplacements et vérifier si c'est possible ( sur un emplacement de mur ou non). 

J'ai essayé aussi de voir si je faisais l'affichage dans le constructeur avec juste un rafraichissement des mouvement sdes personnages mais je suis resté sur une logique dans la méthode "move"

Je suis ensuite passé à l'affichage des items et à leur disparition quand Mac Gyver passe dessus. J'ai eu un leger problème d'icone qui se ré-affectaient differement à 'affichage dès que je prenait un objet mais je l'ai corrigé ensuite. 

Je passe donc à l'incrémentation d'un compteur pour collecter les 3 objets et ensuite  ajouter la condition de victoire ou de défaite en rencontrant le gardien. 

je pense ensuite finir le projet en ajoutant un conteur d'objets collectés à l'écran puis un écran d'accueil du jeu. 

J'ai pu assez facilement ajouter un compteur d'objets en bas à droite. 

J'ai pu ensuitee créer un écran de démarrage du jeu qui demande d'appuyer sur la touche "S" pour commencer. J'ai eu 2 difficultés : la gestion des boucles entre l'écran de démarrage du jeu et le jeu puis la taille différente entre la fenêtre de lancement du jeu et le jeu en soi. 

Pour la problème des boucles, j'ai discuté sur le forum Discord et j'ai pu avoir des indications que j'aii pu mùmettre en pratique rapidement. Pour le problème de taille, en réflechissant et en allant voir la doc de pygame j'ai pu trouver une solution car je tenais à avoir un taille différente sur ces fenêtres. 

 J'ai ensuite ajouté un son, quand on colecte les items. et je suis en traind e voir comment afficher une boite indiquant la fin du jeu quand on gagne ou on perd. 



